/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package longpipescw;

import java.util.*;
/**
 *
 * @author conorfarrell
 */
public class Invoice extends javax.swing.JFrame {

    /**
     * Creates new form Invoice
     */
    public Invoice(ArrayList order) {
        initComponents();
        populate(order);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceOrderText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Invoice");

        invoiceOrderText.setColumns(20);
        invoiceOrderText.setRows(5);
        jScrollPane1.setViewportView(invoiceOrderText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea invoiceOrderText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    public void populate(ArrayList order){
        invoiceOrderText.setEditable(false);
        System.out.println(order.size());
        for(int i = 0; i < order.size(); i++){
           invoiceOrderText.setText(invoiceOrderText.getText() + "Order #" + (i+1) + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Length of pipe: " + ((Pipe)order.get(i)).lengthOfPipe + " (meters)\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Diameter of pipe: " + ((Pipe)order.get(i)).diameterOfPipe + " (inches)\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Grade: " + ((Pipe)order.get(i)).grade + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Chemical Resistance: " + ((Pipe)order.get(i)).chemResist + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Quantity: " + (int)((Pipe)order.get(i)).quantity + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Total cost: Â£" + ((Pipe)order.get(i)).totalCost + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "\n");
        }
    }
}
