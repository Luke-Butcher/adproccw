/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package longpipescw;

import java.util.*;
/**
 *
 * @author conorfarrell
 */
public class Invoice extends javax.swing.JFrame {
    /**
     * Creates new form Invoice
     */
    
    //passing through our objects
    public Invoice(ArrayList order) {
        initComponents();
        //call the populate method as soon as the frame has been opened
        populate(order);
        
        //disallow users from resizing the window
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoiceTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceOrderText = new javax.swing.JTextArea();
        overallCostText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoiceTitle.setText("Invoice");

        invoiceOrderText.setColumns(20);
        invoiceOrderText.setRows(5);
        jScrollPane1.setViewportView(invoiceOrderText);

        overallCostText.setText("Overall Cost: £0.00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(overallCostText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(invoiceTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(invoiceTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overallCostText, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea invoiceOrderText;
    private javax.swing.JLabel invoiceTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel overallCostText;
    // End of variables declaration//GEN-END:variables
    
    //populate method passes the array list so we can access the objects 
    //information
    public void populate(ArrayList <Pipe>order){
        //style the title of the invoice
        invoiceTitle.setFont(invoiceTitle.getFont().deriveFont(18f));
        invoiceTitle.setHorizontalAlignment(invoiceTitle.CENTER);
        
        //dissalow the textbox to be edited
        invoiceOrderText.setEditable(false);
        
        //intatiate order overall cost
        double overallCost = 0;
        invoiceOrderText.setText("Order Breakdown\n\n");
        for(int i = 0; i < order.size(); i++){
           //add the total cost to the overall cost so a final value can be outputted 
           overallCost += order.get(i).totalCost();
           
           //add all the order details
           invoiceOrderText.setText(invoiceOrderText.getText() + "Order #" + (i+1) + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + order.get(i).getPipeDetails());
           invoiceOrderText.setText(invoiceOrderText.getText() + "Quantity: " + (int)order.get(i).getQuantity() + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "Total cost: £" + order.get(i).totalCost() + "\n");
           invoiceOrderText.setText(invoiceOrderText.getText() + "\n");
        }
        
        //round the overall cost to two decimal places
        overallCost = (double) Math.round(overallCost * 100) / 100;
        //set the text in the pop up
        overallCostText.setText("Overall cost: £" + overallCost + "\n");
        
        //style the overall cost in the invoice
        overallCostText.setFont(overallCostText.getFont().deriveFont(18f));
        overallCostText.setHorizontalAlignment(overallCostText.CENTER);
        
        
    }
}
